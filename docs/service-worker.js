const CACHE_NAME="story-app-cache-v2",DATA_CACHE_NAME="story-app-data-v2",DB_NAME="StoryAppDB",DB_VERSION=1,STORE_NAME="offline-stories",API_BASE_URL="https://story-api.dicoding.dev/v1",STORY_API_URL=`${API_BASE_URL}/stories`,BASE_PATH="/myappstory",urlsToCache=[BASE_PATH+"/",BASE_PATH+"/index.html",BASE_PATH+"/manifest.json",BASE_PATH+"/bundle.js",BASE_PATH+"/styles.bundle.css",BASE_PATH+"/icons/icon-192.png",BASE_PATH+"/icons/icon-512.png","https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png","https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png","https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"];self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>e.addAll(urlsToCache).catch(e=>console.log("Cache add failed:",e)))),self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>e!==CACHE_NAME&&e!==DATA_CACHE_NAME?(console.log(`[SW] Deleting old cache: ${e}`),caches.delete(e)):null).filter(e=>null!==e)))),self.clients.claim()}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method)return;const t=e.request.url.replace(`${self.location.origin}${BASE_PATH}`,self.location.origin);!t.includes(STORY_API_URL)||t.includes("push-subscribe")?e.respondWith(caches.match(e.request).then(t=>t||fetch(e.request).then(t=>(200===t.status&&e.request.url.startsWith(self.location.origin)&&caches.open(CACHE_NAME).then(s=>{s.put(e.request,t.clone())}),t)).catch(()=>caches.match(BASE_PATH+"/index.html")))):e.respondWith(caches.open(DATA_CACHE_NAME).then(async e=>{const s=await e.match(t),a=fetch(t).then(async s=>(200!==s.status&&"opaque"!==s.type||await e.put(t,s.clone()),s)).catch(e=>{throw console.log("[SW] Network failed for API:",e),e});return s?(console.log("[SW] Serving from Data Cache"),s):a.catch(()=>caches.match(BASE_PATH+"/index.html"))}))});